name: Setup GCP VM for Airflow

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      GCP_SA_KEY:
        required: true

jobs:
  create-vm:
    runs-on: ubuntu-latest
    outputs:
      external-ip: ${{ steps.get-ip.outputs.vm_ip }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: readmission-prediction-452220

    - name: Verify GCP authentication
      run: |
        gcloud auth list
        gcloud config list
        gcloud compute zones list --limit=1

    - name: Enable Compute Engine API
      run: |
        gcloud services enable compute.googleapis.com

    - name: Create GCP VM instance (if not exists)
      run: |
        set -e
        if gcloud compute instances describe airflow-vm --zone=us-central1-a > /dev/null 2>&1; then
          echo "VM 'airflow-vm' already exists. Skipping creation."
        else
          echo "Creating VM 'airflow-vm'..."
          gcloud compute instances create airflow-vm \
            --zone=us-central1-a \
            --machine-type=e2-micro \
            --image-family=debian-11 \
            --image-project=debian-cloud \
            --boot-disk-size=20GB \
            --tags=http-server,https-server \
            --metadata=startup-script='#! /bin/bash
              sudo apt-get update
              sudo apt-get install -y python3 python3-pip
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
              newgrp docker
            '
        fi


    - name: Get external IP
      id: get-ip
      run: |
        IP=$(gcloud compute instances describe airflow-vm \
          --zone=us-central1-a \
          --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
        echo "vm_ip=$IP" >> $GITHUB_OUTPUT
