name: Setup Airflow on VM and Trigger DAG

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-vm:
    uses: ./.github/workflows/gcp_vm_setup.yml
    name: Call VM Setup Workflow
    secrets:
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

  setup_airflow_vm:
    name: Install Airflow and Trigger DAG
    needs: setup-vm
    runs-on: ubuntu-latest
    env:
      VM_NAME: airflow-vm
      VM_ZONE: us-central1-a
      VM_IP: ${{ needs.setup-vm.outputs.external-ip }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: readmission-prediction-452220

      - name: Wait for cloud-init to finish
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            echo 'Waiting for startup script and apt locks to finish...';
            while [ ! -f /var/lib/cloud/instance/boot-finished ]; do
              echo 'cloud-init not finished yet. Sleeping...';
              sleep 10;
            done;
            while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
              echo 'dpkg lock held. Sleeping...';
              sleep 10;
            done;
            echo 'System ready. Proceeding...';
          "

      - name: Install docker-compose and enable Docker
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            sudo apt-get update &&
            sudo apt-get install -y docker-compose &&
            sudo systemctl start docker &&
            sudo systemctl enable docker
          "

      - name: Copy Airflow config files
        run: |
          gcloud compute scp --quiet ./docker-compose.yml $VM_NAME:~/docker-compose.yml --zone=$VM_ZONE
          gcloud compute scp --quiet ./requirements.txt $VM_NAME:~/requirements.txt --zone=$VM_ZONE

      - name: Set _PIP_ADDITIONAL_REQUIREMENTS
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            export _PIP_ADDITIONAL_REQUIREMENTS=\"\$(cat ~/requirements.txt | tr '\n' ' ')\";
            echo \"export _PIP_ADDITIONAL_REQUIREMENTS=\$(_PIP_ADDITIONAL_REQUIREMENTS)\" >> ~/.bashrc
          "

      - name: Start Airflow with docker-compose
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            cd ~ && docker-compose up -d
          "

      - name: Wait for Airflow to become ready
        run: |
          echo "Waiting for Airflow Webserver on http://$VM_IP:8080/health ..."
          for i in {1..30}; do
            if curl --silent --fail http://$VM_IP:8080/health; then
              echo "Airflow is healthy!"
              break
            else
              echo "Waiting ($i)..."
              sleep 10
            fi
          done

      - name: Trigger DAG
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            curl -X POST http://localhost:8080/api/v1/dags/DataPipeline/dagRuns \
              -H 'Content-Type: application/json' \
              -d '{\"conf\": {}}'
          "

      - name: Optional Cleanup
        if: always()
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --quiet --command "
            docker-compose down
          "
