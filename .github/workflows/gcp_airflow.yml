name: Setup Airflow on VM and Trigger DAG

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-vm:
    uses: ./.github/workflows/gcp_vm_setup.yml  # Reuse the VM setup workflow
    name: Call VM Setup Workflow
    secrets:
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

  setup_airflow_vm:
    name: Install Airflow and Trigger DAG
    needs: setup-vm
    runs-on: ubuntu-latest
    env:
      VM_NAME: airflow-vm
      VM_ZONE: us-central1-a
      VM_IP: ${{ needs.setup-vm.outputs.external-ip }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: readmission-prediction-452220

      - name: Set up Airflow on existing VM
        run: |
          # Wait for the startup script to complete and avoid dpkg lock issues
          gcloud compute ssh ${VM_NAME} --zone=${VM_ZONE} --command "
            echo 'Waiting for apt lock to be released...';
            while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
              echo 'Still locked. Sleeping...';
              sleep 60;
            done;

            echo 'Updating and installing docker-compose...';
            sudo apt-get update && sudo apt-get install -y docker-compose;
            sudo systemctl start docker;
            sudo systemctl enable docker;
          "

          echo "Copying over Airflow config files..."
          gcloud compute scp ./docker-compose.yml ${VM_NAME}:~/docker-compose.yml --zone=${VM_ZONE}
          gcloud compute scp ./requirements.txt ${VM_NAME}:~/requirements.txt --zone=${VM_ZONE}
            - name: Export _PIP_ADDITIONAL_REQUIREMENTS
              run: |
                gcloud compute ssh ${VM_NAME} --zone=${VM_ZONE} --command "
                  export _PIP_ADDITIONAL_REQUIREMENTS=\"\$(cat ~/requirements.txt | tr '\n' ' ')\";
                  echo \"_PIP_ADDITIONAL_REQUIREMENTS=\${_PIP_ADDITIONAL_REQUIREMENTS}\" >> ~/.bashrc;
                  source ~/.bashrc;
                "

      - name: Start Airflow
        run: |
          gcloud compute ssh ${VM_NAME} --zone=${VM_ZONE} --command "cd ~ && docker-compose up -d"

      - name: Wait for Airflow to Start
        run: |
          sleep 240 
          curl --silent --fail http://$VM_IP:8080/health || exit 1

      - name: Trigger DAG
        run: |
          gcloud compute ssh ${VM_NAME} --zone=${VM_ZONE} --command "
            curl -X POST http://localhost:8080/api/v1/dags/DataPipeline/dagRuns \
              -H 'Content-Type: application/json' \
              -d '{\"conf\": {}}'
          "

      - name: Cleanup (Optional)
        run: |
          gcloud compute ssh ${VM_NAME} --zone=${VM_ZONE} --command "
            docker-compose down;
            sudo shutdown now;
          "
